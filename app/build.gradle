/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 */

import java.text.SimpleDateFormat

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

version '0.0.1'
def longVersion = version + ", Build time: "+ new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date())
def mainClassName="com.solace.demo.ichen.App"

repositories {
    // Use Maven Central for resolving dependencies.
   mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

jar {
    archiveFileName = rootProject.name+".jar"
    manifest {
        attributes "Main-Class": mainClassName ,
                'Implementation-Title': rootProject.name,
                'Implementation-Version': longVersion
    }

    from {
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.1'
    implementation 'info.picocli:picocli:4.7.0'
    implementation 'ch.qos.logback:logback-classic:1.4.5'
    implementation 'com.solacesystems:sol-jcsmp:10.16.0'
}

application {
    // Define the main class for the application.
    mainClass = mainClassName
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
